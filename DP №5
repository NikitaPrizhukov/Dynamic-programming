#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

//наибольшая возрастающая подпоследовательность

int main() {

    int count;
    cin >> count;

    vector<int> tiket(count);

    for (int i = 0; i < count; i++) {
        cin >> tiket[i];
    }

    vector<int> dp(count);
    vector<int> prev(count);
    for (int i = 0; i < count; i++) {
        dp[i] = 1;
        prev[i] = -1;
    }

    int maxLenght = 1;

    for (int i = 0; i < count; i++) {
        for (int f = 0; f < i; f++) {
            if (tiket[i] > tiket[f]) {
                if (dp[i] <= dp[f]) {
                    dp[i] = dp[f] + 1;
                    prev[i] = f;
                    if (dp[i] >= maxLenght) {
                        maxLenght = dp[i];
                    }
                }
            }
        }
    }

    int pos = 0;
    int length = dp[0];
    for (int i = 0; i < count; i++) {
        if (dp[i] > length) {
            pos = i;
            length = dp[i];
        }
    }

    vector<int> amswer;

    while (pos != -1) {
        amswer.push_back(pos + 1);
        pos = prev[pos];
    }

    cout << maxLenght << endl;

    for (int i = amswer.size() - 1; i > -1; i--) {
        cout << amswer[i] << " ";
    }

    return 0;
}
